version: 2.1

orbs:
  snyk: snyk/snyk@1.7.0

jobs:
  build:
    docker:
      - image: golang:1.17.2
    working_directory: /terraform-provider-circleci
    steps:
      - checkout
      - run:
          name: Test
          command: |
            go test -mod=vendor -cover ./...
          environment:
            TEST_CIRCLECI_ORGANIZATION: test
      - run:
          name: Build
          command: |
            CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -mod=vendor -ldflags="-s -w" -a -o build/terraform-provider-circleci-darwin-arm64
            CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -mod=vendor -ldflags="-s -w" -a -o build/terraform-provider-circleci-darwin-amd64
            CGO_ENABLED=0 GOOS=linux GOARCH=386 go build -mod=vendor -ldflags="-s -w" -a -o build/terraform-provider-circleci-linux-386
            CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -mod=vendor -ldflags="-s -w" -a -o build/terraform-provider-circleci-linux-amd64
            CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -mod=vendor -ldflags="-s -w" -a -o build/terraform-provider-circleci-linux-arm
            CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -mod=vendor -ldflags="-s -w" -a -o build/terraform-provider-circleci-windows-386.exe
            CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -mod=vendor -ldflags="-s -w" -a -o build/terraform-provider-circleci-windows-amd64.exe
      - run:
          name: Compute checksum of binaries
          command: |
            for binary in build/*; do
              sha256sum -b $binary > $binary.sha256
            done
      - persist_to_workspace:
          root: /terraform-provider-circleci
          paths:
            - build
  lint:
    docker:
      - image: golangci/golangci-lint:v1.39.0
    steps:
      - checkout
      - golangci-lint run
  release:
    working_directory: /build
    docker:
      - image: golang:1.17.2
    steps:
      - attach_workspace:
          at: /
      - run:
          name: Instal GHR
          command: |
            go get github.com/tcnksm/ghr
      - run:
          name: Publish release
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete -draft ${CIRCLE_TAG} .

  vulnerability-scan:
    executor: go
    steps:
      - checkout
      - run:
          name: Setup Scanning
          command: |
              git config --global url."https://$GITHUB_USER:$GITHUB_TOKEN@github.com/circleci/".insteadOf "https://github.com/circleci/"
      - when:
          condition:
              or:
                - equal: [ master, << pipeline.git.branch >> ]
          steps:
              - run:
                  name: Launching Snyk Orb Scanning
                  command: echo "Running snyk/scan on master; uploading the results"
              - snyk/scan:
                  fail-on-issues: false
                  severity-threshold: high
                  monitor-on-build: true
                  project: '${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}'
      - unless:
          condition:
              or:
                - equal: [ master, << pipeline.git.branch >> ]
          steps:
              - run:
                  name: Launching Snyk Orb Scanning
                  command: echo "Running snyk/scan on branch; not uploading the results"
              - snyk/scan:
                  fail-on-issues: false
                  severity-threshold: high
                  monitor-on-build: false
                  project: '${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}'

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - vulnerability-scan:
          context: org-global-employees
      - release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
